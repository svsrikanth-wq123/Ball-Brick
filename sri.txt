import java.util.Scanner;
public class Samp 
{
	void m1(String matrix[][],int count1,int n)
	{
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
			{
			System.out.print(matrix[i][j]+" ");
			}
			System.out.println("");
		}
		System.out.println("Ball count is "+count1+".");
	}
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		System.out.print("Enter size of the NxN matrix : ");
		int n = sc.nextInt();
		String[][] matrix = new String[n][n];
		int i,j,r=0,c=0,a,count1=0;
		for(i=0;i<n;i++)
		{
			for(j=0;j<n;j++)
			{
				if(i==0 || j==n-1 || j==0 )
					matrix[i][j]= "w";
				else if(i==n-1 && j==n/2)
					matrix[i][j]= "o";
				else if(i==n-1&&(j!=0 && j!=n-1))
					matrix[i][j]= "G";
				else
					matrix[i][j]= " ";
			}
		}
		int s=1,count=0;
		while(s!=0)
		{
			System.out.print("Enter the brick's posistion and the brick type:");
			r = sc.nextInt();
			c = sc.nextInt();
			a = sc.nextInt();
			matrix[r][c] = String.valueOf(a);
			System.out.print("Do you want to continue(Y or N)?");
			String v = sc.next();
			if(v.equals("N")) 
			{
				System.out.print("Enter ball count :");
				count = sc.nextInt();
				s=0;
			}
		}
		
		Samp t1 = new Samp();
		t1.m1(matrix,count,n);
		for(int k =0;k<count;k++)
		{
		System.out.print("Enter the direction in which the ball need to traverse :");
		String dir = sc.next();
		switch(dir) 
		{
		case "ST":
			int z = Integer.parseInt(matrix[r][n/2]);
			if(z>1)
			{
				z=z-1;
				matrix[r][n/2] = String.valueOf(z);
			}
			else
				matrix[r][n/2]=" ";
			count1 = count;
			Samp t = new Samp();
			t.m1(matrix,count1,n);
			break;	
		case "LD":
			int p = Integer.parseInt(matrix[r][n/2 - 1]);
			if(p>1)
			{
				p=p-1;
				matrix[r][n/2 - 1] = String.valueOf(p);
			}
			else
				matrix[r][n/2 - 1]=" ";
			if(matrix[r][n/2-2]==" ")
				count1--;
			String temp;
			temp=matrix[i-1][n/2];
			matrix[n-1][n/2]=matrix[n-1][n/2 - 1];
			matrix[n-1][n/2 - 1]=temp;
			Samp t2 = new Samp();
			t2.m1(matrix,count1,n);
			temp=matrix[i-1][n/2];
			matrix[n-1][n/2]=matrix[n-1][n/2 - 1];
			matrix[n-1][n/2 - 1]=temp;
			break;
		case "RD":
			int q = Integer.parseInt(matrix[r][n/2 + 1]);
			if(q>1)
			{
				q=q-1;
				matrix[r][n/2 + 1] = String.valueOf(q);
			}
			else
				matrix[r][n/2 + 1]=" ";
			if(matrix[r][n/2+2]==" ")
				count1--;
			String temp1;
			temp1=matrix[i-1][n/2];
			matrix[n-1][n/2]=matrix[n-1][n/2 + 1];
			matrix[n-1][n/2 + 1]=temp1;
			Samp t3 = new Samp();
			t3.m1(matrix,count1,n);
			temp1=matrix[i-1][n/2];
			matrix[n-1][n/2]=matrix[n-1][n/2 + 1];
			matrix[n-1][n/2 + 1]=temp1;
			break;
		default:
			break;
		}
		}
		
	}

}
